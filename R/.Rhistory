# install.packages("dplyr")
# install.packages("lubridate")
# install.packages("tidyr")
# install.packages("ggplot2")
# install.packages("plotly")
# install.packages("countrycode")
# install.packages('patchwork')
library(dplyr)
library(lubridate)
library(tidyr)
library(ggplot2)
library(plotly)
library(countrycode)
library(patchwork)
read_csv_and_delete_IDs <- function(name){
df <- read.csv(name)
# 1*
df$fecha <- ymd(df$fecha)
df <- df %>% select(-X)
return(df)
}
df <- read_csv_and_delete_IDs(name = "da_market_data.csv")
date_range <- function(df) {
# 2*
# 3*
return(apply(df['fecha'], 2, range))
}
cat("El primer registro es", date_range(df)[1,], "y el ultimo de", date_range(df)[2,])
frequency_of_months <- function(df){
# 4*
# 5*
# 6*
return(table(wday(df$fecha)))
}
parse_days <- function(number){
value = ""
# 7
value <- switch (number,
"Lunes",
"Martes",
"Miércoles",
"Jueves",
"Viernes",
"Sábado",
"Domingo"
)
return(value)
}
cat("El dia del mes con más reportes es el dia", parse_days(which.max(frequency_of_months(df))),"con",max(frequency_of_months(df)),"registros, y el que menos es el", parse_days(which.min(frequency_of_months(df))),"con",min(frequency_of_months(df)))
transformation_from_negative_to_null <- function(df){
# 8*
# 9*
# 10*
# 11*
# 12*
df$precio <- as.numeric(df$precio)
df <- df %>% mutate(precio = replace(precio, precio < 0, NA))
return(df)
}
null_amount <- function(df){
# 13*
null_amount <- sum(is.na(df['precio']))
return(null_amount)
}
df <- transformation_from_negative_to_null(df)
total_nulls <- sum(is.na(df))
cat("La cantidad de valores nulos en la fila precio es de", null_amount(df))
null_assignment <- function(df){
# 14*
# 15*
# 16*
# 17*
# 18*
# 19*
# 20*
df <- df %>%  mutate(across(everything(), ~ replace_na(.,0))) %>% filter(., sistema != "DK1" & sistema != "DK2")
return(df)
}
df <- null_assignment(df)
cat("Antes de borrar los nulos habia", total_nulls, "y despues de borrar todos los nulos quedan", sum(is.na(df)))
value_substitution <- function(df){
# 21*
# 22*
# 23*
# 24*
df <- df %>% mutate(ESTACION = recode(bandera, `0` = "invierno", `1` = "verano"))
return(df)
}
df <- value_substitution(df)
currency_type_analysis <- function(df){
df$tipo_moneda <- recode(df$tipo_moneda, `1` = "Euro", `2` = "Libras")
# 25*
# 26*
analysis <- df %>% group_by(ESTACION, tipo_moneda) %>% summarise(precio_medio = mean(precio), total_records = n())
print(analysis)
return(df)
}
df <- currency_type_analysis(df)
day_difference <- function(df){
# 27*
# 28*
# 29*
df$fecha_actualizacion <- as.POSIXct(df$fecha_actualizacion, format="%Y-%m-%d %H:%M:%S")
df <- df %>% mutate(diferencia_dias = difftime(as.Date(df$fecha_actualizacion), df$fecha , units = "days"))
}
df <- day_difference(df)
cat("El promedio de dias de actualizacion es de", mean(df$diferencia_dias))
dataset_filtration <- df %>% filter(.,tipo_moneda == "Euro" & sistema == "ES")
# 30*
# 31*
# 32*
# 33*
ggplot(dataset_filtration, aes(x = fecha, y = precio)) + geom_point(shape=1, col = 'gray') +  geom_smooth() + labs(x = "Precio ( EUROS )", y = "Fecha", title = "Registro del mercado Español")
market_registration <- df %>% group_by(tipo_moneda, sistema, fecha) %>% filter(., sistema %in% c("ES","FR")) %>% summarise(precio_medio = mean(precio))
# 34*
ggplot(market_registration, aes(x = fecha, y = precio_medio, color=sistema)) + geom_point(shape=1, col = 'gray') +  geom_smooth() + labs(x = "Precio ( EUROS )", y = "Fecha", title = "Registro del mercado Español")
# 35*
# 36*
price_analysis <- df %>% group_by(sistema) %>% summarise(precio_medio = mean(precio)) %>% arrange(., desc(precio_medio))
# 37*
high_prices <- head(price_analysis, 10)
low_prices <- tail(price_analysis, 10)
low_price_chart <- plot_ly(
x = high_prices$sistema,
y = high_prices$precio_medio,
type = "bar",
name = "Paises con media de precio alto"
)
low_price_chart <- low_price_chart %>% layout(
xaxis = list(title = "Paises"),
yaxis = list(title = "Precio medio"))
high_price_chart <- plot_ly(
x = low_prices$sistema,
y = low_prices$precio_medio,
type = "bar",
name = "Paises con media de precio bajo"
)
high_price_chart <- high_price_chart %>% layout(title = 'Promedio de precio medio',
xaxis = list(title = "Paises"),
yaxis = list(title = "Precio medio"))
# https://plotly.com/r/subplots/
average_price <- subplot(low_price_chart, high_price_chart, nrows = 2)
average_price
